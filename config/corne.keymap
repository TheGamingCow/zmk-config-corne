/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        BDAY: BDAY {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp N0 &kp N4 &kp N1 &kp N8 &kp N2 &kp N0 &kp N0 &kp N2>
                ;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &mt LGUI ESC   &kp Q &kp W &kp F &kp P &kp B              &kp J &kp L  &kp U     &kp Y   &kp SEMI    &kp EQUAL
   &kp LCTRL &kp A &kp R &kp S &kp T &kp G              &kp M &kp N  &kp E     &kp I   &kp O &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp D &kp V              &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &caps_word 
                  &lt 1 BSPC &lt 2 DEL &lt 3 TAB        &kp RSHFT &lt 4 RET &lt 5 SPACE
                        >;
                };
                
                media_layer {
                        bindings = <
   &none  &BDAY  &EMAIL  &none  &none  &none               &none  &none  &none  &none  &none  &none
   &trans  &kp LGUI  &kp LALT  &kp TAB  &kp LSHFT  &none   &none  &kp C_PREV  &kp C_VOL_UP  &kp C_NEXT  &kp C_VOL_DN  &none
   &trans  &none  &none  &none  &none  &none               &none  &none  &none  &none  &none  &none
                             &none &none &none          &none  &kp C_MUTE  &kp C_PLAY_PAUSE                     >;
                };

                num_layer {
                        bindings = <
   &kp TAB   &kp MINUS &kp N7 &kp N8 &kp N9 &kp B               &none  &none  &none  &none  &none  &none
   &kp LCTRL &kp N0 &kp N4 &kp N5 &kp N6 &kp G                  &none  &none  &none  &none  &none  &none
   &kp LSHFT &kp KP_DOT &kp N1 &kp N2 &kp N3 &kp V              &none  &none  &none  &none  &none  &none
                             &kp RET &trans  &none   &none  &none  &none
                        >;
                };
                lower_layer {
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI    &kp BSPC
   &kp LCTRL &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp BSPC &mo 1 &kp SPACE   &kp RSHFT &kp RET &kp SPACE
                        >;
                };
                
                sym_layer {
                        bindings = <
   &kp  &kp  &kp  &kp  &kp  &kp    &kp &kp  &kp  &kp  &kp  &kp 
   &kp  &kp  &kp  &kp  &kp  &kp    &kp &kp  &kp  &kp  &kp  &kp
   &kp  &kp  &kp  &kp  &kp  &kp    &kp &kp  &kp  &kp  &kp  &kp
                  &kp  &kp  &kp    &kp &kp  &kp  
                        >;
                };

                raise_layer {
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
